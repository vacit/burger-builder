{"version":3,"sources":["components/Hamburger/Hamburger.js","components/Hamburger/index.js","components/TotalPrice/TotalPrice.js","components/TotalPrice/index.js","components/ItemList/ItemList.js","components/ItemList/index.js","components/Item/Item.js","components/Item/index.js","data.js","App.js","serviceWorker.js","index.js"],"names":["Hamburger","props","className","style","height","ingredients","length","textAlign","map","ingredient","key","displayId","backgroundColor","color","width","margin","marginTop","TotalPrice","toplam","ItemList","items","item","icindeVarMi","selectedIngredients","find","name","icindeKacTaneVar","filter","id","malzemeEkle","malzemeCikar","butonGoster","sayi","Item","onClick","ingrediends","price","App","state","totalPrice","bind","hesapla","malzeme","this","setState","concat","Math","random","targetId","forEach","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faf9f867.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Hamburger(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"BreadTop\" style={{\r\n                height: \"100px\"\r\n            }}></div>\r\n            {\r\n                props.ingredients.length < 1 && <div style={{\r\n                    textAlign: \"center\"\r\n                }}>\r\n                    Malzeme Ekleyin\r\n                </div>\r\n            }\r\n            {\r\n                props.ingredients.map((ingredient) => {\r\n                   return <div key={ingredient.displayId} style={{\r\n                       height: \"20px\",\r\n                       backgroundColor: ingredient.color,\r\n                       width: \"80%\",\r\n                       margin: \"0 auto\",\r\n                       marginTop: \"10px\"\r\n                   }}></div>\r\n                })\r\n            }\r\n            <div className=\"BreadBottom\" style={{\r\n                height: \"50px\"\r\n            }}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hamburger;\r\n","/**\r\n * Created by mehmetyurtar on 11/9/19.\r\n */\r\nimport Hamburger from \"./Hamburger\";\r\nexport default Hamburger;","import React from 'react';\r\n\r\nfunction TotalPrice(props) {\r\n\r\n    return (\r\n        <div>\r\n            TotalPrice: {props.toplam()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TotalPrice;\r\n","/**\r\n * Created by mehmetyurtar on 11/9/19.\r\n */\r\nimport TotalPrice from \"./TotalPrice\";\r\nexport default TotalPrice;","import React from 'react';\r\nimport {Item}  from \"../../components\";\r\n\r\nfunction ItemList(props) {\r\n    return (\r\n        <div>\r\n            {\r\n                props.items.map((item) => {\r\n                    const icindeVarMi = props.selectedIngredients.find((ingredient) => {\r\n                        return ingredient.name === item.name;\r\n                    });\r\n                    const icindeKacTaneVar = props.selectedIngredients.filter((ingredient) => {\r\n                        return item.name === ingredient.name;\r\n                    });\r\n                    return <Item key={item.id} {...item}\r\n                                 malzemeEkle={props.malzemeEkle}\r\n                                malzemeCikar={props.malzemeCikar}\r\n                                butonGoster={icindeVarMi}\r\n                                sayi={icindeKacTaneVar.length}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemList;\r\n","import ItemList from \"./ItemList\";\r\nexport default ItemList;","/**\r\n * Created by mehmetyurtar on 11/9/19.\r\n */\r\nimport React from 'react';\r\n\r\nfunction Item(props) {\r\n    return (\r\n        <div className=\"BuildControl\">\r\n            <div className=\"Label\">\r\n                {props.name}\r\n            </div>\r\n            <div>\r\n                {props.sayi}\r\n            </div>\r\n            {\r\n                props.butonGoster ? <button className=\"Less\" onClick={() => {\r\n                    props.malzemeCikar(props);\r\n                }}>Cıkar</button> : <button className=\"Less disabled\">Cıkar</button>\r\n            }\r\n            <button className=\"more\" onClick={() => {\r\n                props.malzemeEkle(props);\r\n            }}>Ekle</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Item;\r\n","/**\r\n * Created by mehmetyurtar on 11/9/19.\r\n */\r\nimport Item from \"./Item\";\r\nexport default Item","/**\r\n * Created by mehmetyurtar on 11/9/19.\r\n */\r\nconst ingrediends = [\r\n    {\r\n        id: 1,\r\n        name: \"Marul\",\r\n        color: \"green\",\r\n        price: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Peynir\",\r\n        color: \"#ffa600\",\r\n        price: 4\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Kofte\",\r\n        color: \"black\",\r\n        price: 6\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Domates\",\r\n        color: \"red\",\r\n        price: 2\r\n    }\r\n];\r\n\r\nexport default ingrediends;","import React from 'react';\r\nimport './App.css';\r\nimport {Hamburger, TotalPrice, ItemList} from \"./components\";\r\nimport ingrediends from \"./data\";\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            ingredients: [],\r\n            totalPrice: 0\r\n        };\r\n\r\n        this.malzemeEkle = this.malzemeEkle.bind(this);\r\n        this.malzemeCikar = this.malzemeCikar.bind(this);\r\n        this.hesapla = this.hesapla.bind(this);\r\n    }\r\n\r\n    malzemeEkle(malzeme){\r\n        this.setState({\r\n            ingredients: [...this.state.ingredients].concat([\r\n                {...malzeme, displayId: Math.random()}\r\n            ])\r\n        })\r\n    }\r\n\r\n    malzemeCikar(malzeme){\r\n        // Cikarılması gereken malzemeyi alalım.\r\n        const selectedMalzeme = this.state.ingredients.find((ingredient) => {\r\n           return ingredient.name === malzeme.name;\r\n        });\r\n\r\n        // Elimizde olan ilk malzemenin displayId alalım\r\n        const targetId = selectedMalzeme.displayId;\r\n\r\n        // Display Id üzerinden bu malzemeyi silelim.\r\n        this.setState({\r\n            ingredients: this.state.ingredients.filter((ingredient) => {\r\n                return ingredient.displayId !== targetId;\r\n            })\r\n        })\r\n    }\r\n\r\n    hesapla(){\r\n        let toplam = 0;\r\n        this.state.ingredients.forEach((item) => {\r\n            toplam += item.price\r\n        });\r\n        return toplam;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Hamburger ingredients={this.state.ingredients} />\r\n                <TotalPrice toplam={this.hesapla}/>\r\n                <ItemList items={ingrediends}\r\n                          malzemeEkle={this.malzemeEkle}\r\n                          malzemeCikar={this.malzemeCikar}\r\n                          selectedIngredients={this.state.ingredients}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}